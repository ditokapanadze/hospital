import { Exclude } from "class-transformer";

import {
  AfterInsert,
  Entity,
  PrimaryGeneratedColumn,
  Column,
  OneToMany,
  ManyToOne,
  OneToOne,
  DeleteDateColumn,
  JoinColumn,
} from "typeorm";
import { DBuser } from "src/users/types/interfaces";
import { Role } from "src/users/types/enum/roles.enum";
import { HospitalEntity } from "src/hospitals/entitiy/hospital.entity";
import { ScheduleEntity } from "src/schedule/entity/schedule.entity";
import { MediaEntity } from "src/media/entity";

@Entity({ name: "User" })
export class UserEntity implements DBuser {
  @PrimaryGeneratedColumn()
  public id: number;

  @Column({ unique: true, type: "varchar" })
  public email: string;

  @Column({ type: "varchar" })
  public name: string;

  @Column({ type: "varchar" })
  @Exclude()
  public password: string;

  @Column({ type: "enum", enum: Role, default: Role.USER })
  public role: Role[];

  @Column({ type: "varchar", nullable: true })
  @Exclude()
  public hashedRefreshToken: string;

  @DeleteDateColumn({
    name: "deletedAt",
    type: "timestamp with time zone",
    nullable: true,
    default: null,
  })
  public deletedAt: Date;

  @Column({ default: false, type: "boolean" })
  public isDeleted: boolean;

  @Column({ default: false, type: "boolean" })
  public autogeneratedPassword: boolean;

  @Column({ default: false, type: "boolean" })
  public isVerified: boolean;

  @Column({ default: null, type: "varchar" })
  @Exclude()
  public resetPasswordToken: string;

  @OneToOne(() => MediaEntity, {
    nullable: true,
    eager: true,
    onDelete: "SET NULL",
  })
  @JoinColumn()
  avatar: MediaEntity;

  @ManyToOne(() => HospitalEntity, (hospital) => hospital.doctors)
  hospitalDoctor: HospitalEntity;

  @ManyToOne(() => HospitalEntity, (hospital) => hospital.admin)
  hospitalAdmin: HospitalEntity;

  @OneToMany(
    () => ScheduleEntity,
    (schedule) => schedule.doctor || schedule.visitor
  )
  public schedule: ScheduleEntity[];
}
